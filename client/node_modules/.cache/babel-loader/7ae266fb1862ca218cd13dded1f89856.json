{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bm_93\\\\Desktop\\\\INFO345\\\\info245prosjekt\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Search from './pages/Search';\nimport './App.css';\nimport Login from './pages/Login';\nimport ServerConnection from './Serverconnection';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false\n    };\n    this.server = new ServerConnection('localhost');\n    this.getLogin = this.getLogin.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('update');\n\n    if (prevState.id !== this.state.id) {\n      this.server.apiCallSingle('http://localhost:8080/request?id=' + this.state.id).then(response => {\n        this.setState({\n          data: response\n        });\n      });\n    }\n  }\n\n  getLogin(id) {\n    console.log(id);\n\n    if (id !== null) {\n      this.setState({\n        loggedIn: true,\n        id: id\n      });\n    } else {\n      console.log('No login id provided');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, this.state.loggedIn ? /*#__PURE__*/React.createElement(Search, {\n      className: \"searchbox\",\n      options: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Login, {\n      getLogin: this.getLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/bm_93/Desktop/INFO345/info245prosjekt/client/src/App.js"],"names":["React","Component","Search","Login","ServerConnection","App","constructor","props","state","loggedIn","server","getLogin","bind","componentDidUpdate","prevProps","prevState","console","log","id","apiCallSingle","then","response","setState","data","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AACzBK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAIA,SAAKC,MAAL,GAAc,IAAIN,gBAAJ,CAAqB,WAArB,CAAd;AAEA,SAAKO,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,QAAGF,SAAS,CAACG,EAAV,KAAiB,KAAKV,KAAL,CAAWU,EAA/B,EAAmC;AACjC,WAAKR,MAAL,CAAYS,aAAZ,CAA0B,sCAAsC,KAAKX,KAAL,CAAWU,EAA3E,EACCE,IADD,CACOC,QAAD,IAAc;AAAC,aAAKC,QAAL,CAAc;AAACC,UAAAA,IAAI,EAAEF;AAAP,SAAd;AAAgC,OADrD;AAED;AACF;;AAEDV,EAAAA,QAAQ,CAACO,EAAD,EAAI;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;;AACA,QAAGA,EAAE,KAAK,IAAV,EAAe;AACb,WAAKI,QAAL,CAAc;AACZb,QAAAA,QAAQ,EAAE,IADE;AAEZS,QAAAA,EAAE,EAAGA;AAFO,OAAd;AAID,KALD,MAKO;AACLF,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;AAEF;;AAEDO,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKhB,KAAL,CAAWC,QAAX,gBACD,oBAAC,MAAD;AACA,MAAA,SAAS,EAAC,WADV;AAEA,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWe,IAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,gBAKD,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKZ,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADF;AAWD;;AA7CwB;;AAmD3B,eAAeN,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Search from './pages/Search';\nimport './App.css';\nimport Login from './pages/Login';\nimport ServerConnection from './Serverconnection';\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      loggedIn: false\n    }\n\n    this.server = new ServerConnection('localhost')\n\n    this.getLogin = this.getLogin.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    console.log('update')\n    if(prevState.id !== this.state.id) {\n      this.server.apiCallSingle('http://localhost:8080/request?id=' + this.state.id)\n      .then((response) => {this.setState({data: response})})\n    }\n  }\n\n  getLogin(id){\n    console.log(id)\n    if(id !== null){\n      this.setState({\n        loggedIn: true,\n        id : id\n      })\n    } else {\n      console.log('No login id provided')\n    }\n\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n          {this.state.loggedIn ? \n          <Search \n          className='searchbox'\n          options={this.state.data} /> \n          :\n          <Login getLogin={this.getLogin}/>}\n          \n      </div>\n    );\n  }\n\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}